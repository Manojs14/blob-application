/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-07-17 08:59:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AdminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Add post</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	font-family: Arial, sans-serif;\r\n");
      out.write("	background-image: url('image/keith-misner-h0Vxgz5tyXA-unsplash.jpg');\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	background-position: center;\r\n");
      out.write("	background-repeat: no-repeat;\r\n");
      out.write("	background-attachment: fixed;\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".top-bar {\r\n");
      out.write("	font-family: fantasy;\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	color: 000080;\r\n");
      out.write("	padding: 14px 20px;\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	width: calc(100% - 40px);\r\n");
      out.write("	top: 10px;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	transform: translateX(-50%);\r\n");
      out.write("	z-index: 1000;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bottom-bar {\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	bottom: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	background-color: #a0a0a0;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 10px 0;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	z-index: 1000;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".content {\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	/* Adjust the padding-bottom to ensure content doesn't overlap with the bottom bar */\r\n");
      out.write("	padding-bottom: 50px;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#form {\r\n");
      out.write("	border: 20px solid black; /* Black border */\r\n");
      out.write("	box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.5); /* Shadow effect */\r\n");
      out.write("	padding: 40px; /* Optional: padding for better layout */\r\n");
      out.write("	width: 300px; /* Optional: width of the form */\r\n");
      out.write("	margin: 20px auto; /* Optional: center the form */\r\n");
      out.write("	border-radius: 10px; /* Optional: rounded corners */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".formtop {\r\n");
      out.write("	border: 5px solid white;\r\n");
      out.write("	background-color: black;\r\n");
      out.write("	font-style: fancy;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");

//retrieve the data from the session
System.out.println("line 92 of ap.jsp");
session=request.getSession();
String role=(String)session.getAttribute("role");
int userid= (Integer)session.getAttribute("userid");
String error=request.getParameter("error");
System.out.println(role+" "+userid);
if(error !=null&&"Database error occurred".equals(error)){
	
      out.write("\r\n");
      out.write("		<script>\r\n");
      out.write("		alert(\"Some error occured while processing , Please try again\");\r\n");
      out.write("		</script>\r\n");
      out.write("	");
 
	}


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- For Form -->\r\n");
      out.write("	<div class=\"content\"></div>\r\n");
      out.write("	<div class=\"container text-center\">\r\n");
      out.write("		<div class=\"row align-items-start\">\r\n");
      out.write("			<div class=\"col\"></div>\r\n");
      out.write("			<div class=\"col\" id=\"form\">\r\n");
      out.write("				<div class=\"formtop\">\r\n");
      out.write("					<b>Create a Blog</b>\r\n");
      out.write("				</div>\r\n");
      out.write("				<form action=\"createPostServlet\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("					<fieldset style=\"padding: 10px;\">\r\n");
      out.write("                    ");
System.out.println("the email in addpost.jsp line 156 "+role); 
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"title\"\r\n");
      out.write("								id=\"exampleInputtitle1\" aria-describedby=\"titleHelp\"\r\n");
      out.write("								placeholder=\"Title\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"mb-3\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" name=\"content\"\r\n");
      out.write("								id=\"content\" placeholder=\"Content\" required>\r\n");
      out.write("						</div>\r\n");
      out.write("					\r\n");
      out.write("						 <label for=\"media\">Image/Video:</label>\r\n");
      out.write("        <input type=\"file\" id=\"media\" name=\"media\" accept=\"image/*,video/*\"><br>\r\n");
      out.write("						<button type=\"submit\" class=\"btn btn-primary\"\r\n");
      out.write("							style=\"width: 250px;\">Create Blog</button>\r\n");
      out.write("					</fieldset>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js\"\r\n");
      out.write("	integrity=\"sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js\"\r\n");
      out.write("	integrity=\"sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
